[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(directed.StrictGraphDefaultImplSpec, org.scalatest.tools.Framework$$anon$1@1830e9c0, false, [SuiteSelector])[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(undirected.SimpleGraphDefaultImplSpec, org.scalatest.tools.Framework$$anon$1@1830e9c0, false, [SuiteSelector])[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(undirected.SimpleGraphNeighborsImplSpec, org.scalatest.tools.Framework$$anon$1@1830e9c0, false, [SuiteSelector])[0m
[0m[[0m[0minfo[0m] [0m[0m[32mSimpleGraphDefaultImplSpec:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mSimpleGraphDefaultImpl.neighborsOf[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- must yield None if input is not an actual vertex of graph[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- must yield a subset of vertex set if input is an actual vertex of graph[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- must yield a set of adjacent vertices[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mSimpleGraphDefaultImpl.+[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- must contain input vertex[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- must return input graph if input vertex is already in graph[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- must have input vertex with degree 0 if not an actual vertex of graph[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mSimpleGraphDefaultImpl.-[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- must NOT contain input vertex[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- must return input graph if input vertex is not already in graph[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- must have input vertex removed from neighbors if an actual vertex of graph[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- must have degree updated for all neighbors if an actual vertex of graph[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- must revert back the + operator applied on an actual new vertex[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mSimpleGraphDefaultImpl.+|[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- must contain input edge[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- must contain ends of input edge[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- must return input graph if input edge is already in graph[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mSimpleGraphDefaultImpl.-|[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- must NOT contain input edge[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- must return input graph if input edge is not already in graph[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- must have ends removed from neighbors if an actual vertex of graph[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- must have degree updated for both ends if an actual vertex of graph[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mSimpleGraphDefaultImpl.withoutEdge[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- must let vertex set unchanged[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- must have empty edge set[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- must have empty neighbors for any vertex[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- must have zero degree for any vertex[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mStrictGraphDefaultImplSpec:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mStrictGraphDefaultImpl.successorsOf[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- must yield None if input is not an actual vertex of graph[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- must yield a subset of vertex set if input is an actual vertex of graph[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- must yield a set of adjacent vertices[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mStrictGraphDefaultImpl.+[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- must contain input vertex[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- must return input graph if input vertex is already in graph[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m- must have input vertex with degree 0 if not an actual vertex of graph *** FAILED ***[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  NotImplementedError was thrown during property evaluation.[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m    Message: an implementation is missing[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m    Occurred when passed generated values ([0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m      arg0 = (({10, 9, 2, 1}, {1 -> 10, 2 -> 9, 9 -> 10, 1 -> 9, 9 -> 1, 10 -> 1, 2 -> 1, 9 -> 2}),8)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m    )[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mStrictGraphDefaultImpl.-[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- must NOT contain input vertex[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- must return input graph if input vertex is not already in graph[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- must have input vertex removed from successors if an actual vertex of graph[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m- must have degree updated for all successors if an actual vertex of graph *** FAILED ***[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  NotImplementedError was thrown during property evaluation.[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m    Message: an implementation is missing[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m    Occurred when passed generated values ([0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m      arg0 = (({9, 6, 3, 5}, {6 -> 5, 3 -> 5, 3 -> 6, 5 -> 9, 6 -> 3, 5 -> 3, 9 -> 3, 6 -> 9, 9 -> 5, 3 -> 9}),9)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m    )[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- must revert back the + operator applied on an actual new vertex[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mStrictGraphDefaultImpl.+|[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- must contain input arc[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- must contain ends of input arc[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- must return input graph if input arc is already in graph[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mStrictGraphDefaultImpl.-|[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- must NOT contain input arc[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- must return input graph if input arc is not already in graph[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- must have ends removed from successors if an actual vertex of graph[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m- must have degree updated for both ends if an actual vertex of graph *** FAILED ***[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  NotImplementedError was thrown during property evaluation.[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m    Message: an implementation is missing[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m    Occurred when passed generated values ([0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m      arg0 = (({10, 1, 2, 7, 3}, {3 -> 10, 10 -> 1, 2 -> 7, 3 -> 2, 1 -> 3, 10 -> 2, 7 -> 10, 10 -> 3, 1 -> 7, 10 -> 7, 3 -> 1}),10 -> 7)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m    )[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mStrictGraphDefaultImpl.withoutArc[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- must let vertex set unchanged[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- must have empty arc set[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- must have empty successors for any vertex[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m- must have zero degree for any vertex *** FAILED ***[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  NotImplementedError was thrown during property evaluation.[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m    Message: an implementation is missing[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m    Occurred when passed generated values ([0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m      arg0 = ({1}, {})[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m    )[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mSimpleGraphNeighborsImplSpec:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mSimpleGraphNeighborsImpl.neighborsOf[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- must yield None if input is not an actual vertex of graph[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- must yield a subset of vertex set if input is an actual vertex of graph[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- must yield a set of adjacent vertices[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mSimpleGraphNeighborsImpl.+[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- must contain input vertex[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- must return input graph if input vertex is already in graph[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- must have input vertex with degree 0 if not an actual vertex of graph[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mSimpleGraphNeighborsImpl.-[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- must NOT contain input vertex[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- must return input graph if input vertex is not already in graph[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- must have input vertex removed from neighbors if an actual vertex of graph[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- must have degree updated for all neighbors if an actual vertex of graph[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- must revert back the + operator applied on an actual new vertex[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mSimpleGraphNeighborsImpl.+|[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- must contain input edge[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- must contain ends of input edge[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- must return input graph if input edge is already in graph[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mSimpleGraphNeighborsImpl.-|[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- must NOT contain input edge[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- must return input graph if input edge is not already in graph[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- must have ends removed from neighbors if an actual vertex of graph[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- must have degree updated for both ends if an actual vertex of graph[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mSimpleGraphNeighborsImpl.withoutEdge[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- must let vertex set unchanged[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- must have empty edge set[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- must have empty neighbors for any vertex[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- must have zero degree for any vertex[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mRun completed in 1 second, 765 milliseconds.[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mTotal number of tests run: 66[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mSuites: completed 3, aborted 0[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mTests: succeeded 62, failed 4, canceled 0, ignored 0, pending 0[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m*** 4 TESTS FAILED ***[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mPassed tests:[0m
[0m[[0m[0mdebug[0m] [0m[0m	undirected.SimpleGraphNeighborsImplSpec[0m
[0m[[0m[0mdebug[0m] [0m[0m	undirected.SimpleGraphDefaultImplSpec[0m
[0m[[0m[31merror[0m] [0m[0mFailed tests:[0m
[0m[[0m[31merror[0m] [0m[0m	directed.StrictGraphDefaultImplSpec[0m
[0m[[0m[31merror[0m] [0m[0m(Test / [31mtest[0m) sbt.TestsFailedException: Tests unsuccessful[0m
